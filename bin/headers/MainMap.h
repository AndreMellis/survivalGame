#pragma once
#include <utility>

#define VAR_MAPHEIGHT 50
#define VAR_MAPWIDTH 100
#define VAR_EMPTYFIELDASCII '.'
#define VAR_WALLASCII '#'
#define VAR_FORESTASCII '^'
#define VAR_PLAYERASCII 'P'

class MainMap
{
private:
	char playerMap[VAR_MAPHEIGHT][VAR_MAPWIDTH] = {
		"###################################################################################################",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"#.................................................................................................#",
		"###################################################################################################"

	};

	int playerX;
	int playerY;
	static MainMap *mapInst;
	MainMap(); //initializer that sets the starting point of Player
	~MainMap(); 
public:
	static MainMap *getInstance(); //call constuctor through here to have one shared map instance globally
	void drawMap(); //draws map to console
	std::pair<int,int> getPlayerCords(); //returns the coordinates of the player
	void movePlayer(); //move player using wasd
	void insertObj(char newObject, std::pair<int,int> cords); //insert a new object into the map, like ^, P or #
	char getObj(std::pair<int,int> cords); //takes in cords, and returns the char that is there
	std::pair<int,int> getFreeCords(); //returns random cords of a free spot on the map
	std::pair<int,int> getFreeNeighbor(std::pair<int,int> inputCords); //takes an a set of cords and returns a free neighbor
};
